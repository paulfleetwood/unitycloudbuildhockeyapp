"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var multi_thread_uploader_1 = require("./upload/multi-thread-uploader");
var single_thread_uploader_1 = require("./upload/single-thread-uploader");
function getUploadClient(uploadData, useSingleThread) {
    if (useSingleThread === void 0) { useSingleThread = false; }
    if (useSingleThread || useSingleThreadUploader()) {
        return new single_thread_uploader_1.default(uploadData);
    }
    else {
        return new multi_thread_uploader_1.default(uploadData);
    }
}
exports.default = getUploadClient;
function useSingleThreadUploader() {
    return true; // TODO: get out how to use more :)
    // The uploader switches to single threaded under three conditions:
    // 1. The user is using Edge (current version crashes the browser)
    // 2. The file size is smaller than the allowed single thread max.
    // 3. The upload has recovered too many workers.
    // return (navigator && navigator.userAgent && navigator.userAgent.indexOf("Edge")) > 0 ||
    //   this.uploadData.file.size <= this.maxSingleThreadUploadSize ||
    //   this.uploadStatus.workerErrorCount > maxNumberOfRecoveredWorkers;
}
//# sourceMappingURL=upload-controller-factory.js.map