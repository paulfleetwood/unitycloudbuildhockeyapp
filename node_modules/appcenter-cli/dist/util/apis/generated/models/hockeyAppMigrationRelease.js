/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A single HockeyApp release to migrate to App Center
 *
 */
class HockeyAppMigrationRelease {
  /**
   * Create a HockeyAppMigrationRelease.
   * @property {number} [id]
   * @property {string} [shortversion]
   * @property {string} [version]
   * @property {number} [appsize]
   * @property {string} [minimumOsVersion]
   * @property {string} [md5Fingerprint]
   * @property {date} [createdAt]
   * @property {string} [buildUrl]
   * @property {string} [bundleIdentifier]
   * @property {string} [deviceFamily]
   * @property {array} [languages]
   * @property {object} [uuids] For iOS apps, a dictionary of UUIDs for
   * architectures (in format `{"armv7":
   * "353df799-d450-3308-8492-928ecf1ebf53", "arm64":
   * "e67c0e93-b6d6-3f5a-b3a7-68d2b215bf27"}`)
   * @property {boolean} [isExternalBuild]
   * @property {boolean} [mandatory]
   * @property {number} [status] The status of the release in HockeyApp. Maps
   * to HockeyAppSchema.AppVersionStatus. Possible values: Deleted = -1, New =
   * 0, Inactive = 1, Active = 2, Hidden = 3, SonomaActive = 4
   * @property {string} [notes]
   * @property {array} [distributionGroupIds] List of DistributionGroup IDs the
   * release is distributed to
   * @property {array} [distributionUserIds] List of User IDs the release is
   * distributed to
   * @property {array} [provisioningProfiles]
   */
  constructor() {
  }

  /**
   * Defines the metadata of HockeyAppMigrationRelease
   *
   * @returns {object} metadata of HockeyAppMigrationRelease
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HockeyAppMigrationRelease',
      type: {
        name: 'Composite',
        className: 'HockeyAppMigrationRelease',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          shortversion: {
            required: false,
            serializedName: 'shortversion',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          appsize: {
            required: false,
            serializedName: 'appsize',
            type: {
              name: 'Number'
            }
          },
          minimumOsVersion: {
            required: false,
            serializedName: 'minimum_os_version',
            type: {
              name: 'String'
            }
          },
          md5Fingerprint: {
            required: false,
            serializedName: 'md5_fingerprint',
            type: {
              name: 'String'
            }
          },
          createdAt: {
            required: false,
            serializedName: 'created_at',
            type: {
              name: 'DateTime'
            }
          },
          buildUrl: {
            required: false,
            serializedName: 'build_url',
            type: {
              name: 'String'
            }
          },
          bundleIdentifier: {
            required: false,
            serializedName: 'bundle_identifier',
            type: {
              name: 'String'
            }
          },
          deviceFamily: {
            required: false,
            serializedName: 'device_family',
            type: {
              name: 'String'
            }
          },
          languages: {
            required: false,
            serializedName: 'languages',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          uuids: {
            required: false,
            serializedName: 'uuids',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          isExternalBuild: {
            required: false,
            serializedName: 'is_external_build',
            type: {
              name: 'Boolean'
            }
          },
          mandatory: {
            required: false,
            serializedName: 'mandatory',
            type: {
              name: 'Boolean'
            }
          },
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'Number'
            }
          },
          notes: {
            required: false,
            serializedName: 'notes',
            type: {
              name: 'String'
            }
          },
          distributionGroupIds: {
            required: false,
            serializedName: 'distribution_group_ids',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          distributionUserIds: {
            required: false,
            serializedName: 'distribution_user_ids',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          provisioningProfiles: {
            required: false,
            serializedName: 'provisioning_profiles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ProvisioningProfileMigrationElementType',
                  type: {
                    name: 'Composite',
                    className: 'ProvisioningProfileMigration'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = HockeyAppMigrationRelease;
